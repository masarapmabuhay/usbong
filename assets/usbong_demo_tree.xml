<?xml version="1.0" encoding="UTF-8"?>

<process-definition xmlns=""  lang="English" name="usbongDemoTree">
	<start-state name="start-state1">
		<transition to="textDisplay~Usbong Demo Tree (ver.20151212)"></transition>
	</start-state>

	<task-node name="textDisplay~Usbong Demo Tree (ver.20151212)">
		<transition to='textDisplay~Welcome! Usbong is an open source platform that enables you to create and run, what we call, "Trees."'></transition>
	</task-node>

	<task-node name='textDisplay~Welcome! Usbong is an open source platform that enables you to create and run, what we call, "Trees."'>
		<transition to='textDisplay~"Trees" can be anything from branching storybooks, step-by-step guides, and even clinical pathways.'></transition>
	</task-node>

	<task-node name='textDisplay~"Trees" can be anything from branching storybooks, step-by-step guides, and even clinical pathways.'>
		<transition to='textDisplay~The idea is that as long as you have a flowchart, even though you don&#8217;t have a background in Computer Science or Engineering, you can create trees using the companion app, {a href="https://play.google.com/store/apps/details?id=usbong.android.builder"}Usbong Builder{/a}.'></transition>
	</task-node>

	<task-node name='textDisplay~The idea is that as long as you have a flowchart, even though you don&#8217;t have a background in Computer Science or Engineering, you can create trees using the companion app, {a href="https://play.google.com/store/apps/details?id=usbong.android.builder"}Usbong Builder{/a}.'>
		<transition to='textDisplay~The trees that you create can then be run here on this Usbong app.'></transition>
	</task-node>

	<task-node name='textDisplay~The trees that you create can then be run here on this Usbong app.'>
		<transition to='textDisplay~For more info on this, do visit our website! {a href="http://www.usbong.ph"}www.usbong.ph{/a}'></transition>
	</task-node>

	
	<task-node name='textDisplay~For more info on this, do visit our website! {a href="http://www.usbong.ph"}www.usbong.ph{/a}'>
		<transition to="At this point, do you want me to show you the various components that you can use?"></transition>
	</task-node>

	<decision name="At this point, do you want me to show you the various components that you can use?">
		<transition to="end-state1" name="No"></transition>
		<transition to='textDisplay~In the previous screen, you were asked a Yes/No question. That is actually a type of screen called, "DECISION". Depending on your answer, you are led to a particular branching node.' name='Yes'></transition>
	</decision>

	<task-node name='textDisplay~In the previous screen, you were asked a Yes/No question. That is actually a type of screen called, "DECISION". Depending on your answer, you are led to a particular branching node.'>
		<transition to='What you see in this screen is an example of a "TEXT" screen type, where text is simply displayed on the screen.'></transition>
	</task-node>

	<task-node name='What you see in this screen is an example of a "TEXT" screen type, where text is simply displayed on the screen.'>
		<transition to='textImageDisplay~sample_image~You can display both a text and an image as well. This is called, "TEXT_AND_IMAGE". If you only want to display an image, that type of screen is called, "IMAGE."'></transition>
	</task-node>

	<task-node name='textImageDisplay~sample_image~You can display both a text and an image as well. This is called, "TEXT_AND_IMAGE". If you only want to display an image, that type of screen is called, "IMAGE."'>
		<transition to='photoCapture~The camera is also available for you to use!'></transition>
	</task-node>

	<task-node name='photoCapture~The camera is also available for you to use!'>
		<transition to='audioRecord~To record narrations, you can use the audio recorder!'></transition>
	</task-node>

	<task-node name='audioRecord~To record narrations, you can use the audio recorder!'>
		<transition to='checkList~0~This is an example of a "LIST" screen type, which you can configure such that it acts like a checkList. It can then allow a person to tick more than one box. You can specify how many boxes should be checked to go to the "Correct" branch. If the checked boxes are too few, the person is led to the "Incorrect" branch.'></transition>
	</task-node>

	<task-node name='checkList~0~This is an example of a "LIST" screen type, which you can configure such that it acts like a checkList. It can then allow a person to tick more than one box. You can specify how many boxes should be checked to go to the "Correct" branch. If the checked boxes are too few, the person is led to the "Incorrect" branch.'>
		<task name="Option 1"></task>
		<task name="Option 2"></task>
		<transition to='radioButtons~Alternatively, you can configure LIST so that it acts as a radio buttons list, like in a survey. However, only one button can be ticked, and you are always led to the next screen that you pre-specify.'></transition>
	</task-node>

	<task-node name='radioButtons~Alternatively, you can configure LIST so that it acts as a radio buttons list, like in a survey. However, only one button can be ticked, and you are always led to the next screen that you pre-specify.'>
		<task name="Option 1"></task>
		<task name="Option 2"></task>
		<transition to='textField~This is an example of a "TEXT_INPUT". This allows a person to enter text onto the device.'></transition>
	</task-node>

	<task-node name='textField~This is an example of a "TEXT_INPUT". This allows a person to enter text onto the device.'>
		<transition to='textFieldWithUnit~kilogram(s)~You can also configure the TEXT_INPUT such that it has a unit. Notice that only numbers are allowed to be entered here.'></transition>
	</task-node>

	<task-node name='textFieldWithUnit~kilogram(s)~You can also configure the TEXT_INPUT such that it has a unit. Notice that only numbers are allowed to be entered here.'>
		<transition to='date~To get the date today, you can use the "SPECIAL_INPUT" screen type, and selecting "DATE" for the input type.'></transition>
	</task-node>

	<task-node name='date~To get the date today, you can use the "SPECIAL_INPUT" screen type, and selecting "DATE" for the input type.'>
		<transition to="textDisplay~There are many more components that you can use, for example, a canvas for drawing (or signing documents), and a QR code reader (for patient identification)."></transition>
	</task-node>

	<task-node name="textDisplay~There are many more components that you can use, for example, a canvas for drawing (or signing documents), and a QR code reader (for patient identification).">
		<transition to="Here's a quick run-through of what you can already use:"></transition>
	</task-node>
	
	<task-node name="Here's a quick run-through of what you can already use:">
		<task name="decision"/>
		<task name="textField"/>
		<task name="textFieldWithUnit"/>
		<task name="textFieldNumerical"/>
		<task name="textArea"/>
		<task name="date"/>
		<task name="textDisplay"/>
		<task name="imageDisplay"/>
		<task name="textImageDisplay"/>
		<task name="clickableImageDisplay"/>
		<task name="textClickableImageDisplay"/>
		<task name="GPS"/>
		<task name="classification"/>
		<task name="checkList"/>
		<task name="radioButtons"/>
		<task name="link (ala choose-your-own-adventure)"/>
		<transition to="Here are some more:" name="Any"></transition>
	</task-node>

	<task-node name="Here are some more:">
		<task name="audioRecord"/>
		<task name="photoCapture"/>
		<task name="paint"/>
		<task name="qrCodeReader"/>
		<task name="textFieldWithAnswer"/>
		<task name="textAreaWithAnswer"/>
		<task name="radioButtonsWithAnswer"/>
		<task name="videoFromFile"/>
		<task name="videoFromFileWithText"/>
		<task name="youtubeVideo"/>
		<task name="youtubeVideoWithText"/>
		<task name="timestampDisplay"/>
		<task name="simpleEncrypt"/>
		<task name="sendToWebServer"/>
		<task name="sendToCloudBasedService"/>
		<transition to='textDisplay~You, too, can create your own components (e.g. stop watches, mini games) by checking out the Usbong code on {a href="https://github.com/masarapmabuhay/usbong"}GitHub{/a}. You can also send us your request via "support@usbong.ph" and/or "usbong-users@googlegroups.com"!' name="Any"></transition>
	</task-node>
		
	<task-node name='textDisplay~You, too, can create your own components (e.g. stop watches, mini games) by checking out the Usbong code on {a href="https://github.com/masarapmabuhay/usbong"}GitHub{/a}. You can also send us your request via "support@usbong.ph" and/or "usbong-users@googlegroups.com"!'>
		<transition to='textDisplay~The procedure we use is: the more people clamoring for a particular feature, the higher it becomes in the priority list.'></transition>
	</task-node>

	<task-node name='textDisplay~The procedure we use is: the more people clamoring for a particular feature, the higher it becomes in the priority list.'>
		<transition to="textDisplay~Before I forget, data captured using Usbong are stored in the device's SD Card, but they can also be sent to your favorite cloud-based service, like an email service or a social networking site. Alternatively, you can send data to your own web server!"></transition>
	</task-node>

	<task-node name="textDisplay~Before I forget, data captured using Usbong are stored in the device's SD Card, but they can also be sent to your favorite cloud-based service, like an email service or a social networking site. Alternatively, you can send data to your own web server!">
		<transition to="textDisplay~Oh, and one more thing."></transition>
	</task-node>

	<task-node name="textDisplay~Oh, and one more thing.">
		<transition to="textDisplay~By pressing the menu button on the device (outside the screen) or the button at the top-right of the screen, you can actually switch languages, if they're available, and make Usbong read aloud the displayed text!"></transition>
	</task-node>

	<task-node name="textDisplay~By pressing the menu button on the device (outside the screen) or the button at the top-right of the screen, you can actually switch languages, if they're available, and make Usbong read aloud the displayed text!">
		<transition to='textDisplay~At present, Usbong can automatically speak in Filipino, English, and Japanese. The Japanese Text-to-Speech though should first be purchased on Google Play. Plus, if the tree file has its own translations and voice-over narrations, Usbong can display and play them no matter what language they may be!'></transition>
	</task-node>

	<task-node name="textDisplay~At present, Usbong can automatically speak in Filipino, English, and Japanese. The Japanese Text-to-Speech though should first be purchased on Google Play. Plus, if the tree file has its own translations and voice-over narrations, Usbong can display and play them no matter what language they may be!">
		<transition to='Well, I hope this piqued your interest! If you have questions or concerns, do voice them out via "support@usbong.ph" and/or "usbong-users@googlegroups.com"! Thank you!'></transition>
	</task-node>

	<task-node name='Well, I hope this piqued your interest! If you have questions or concerns, do voice them out via "support@usbong.ph" and/or "usbong-users@googlegroups.com"! Thank you!'>
		<transition to="end-state1"></transition>
	</task-node>
	<end-state name="end-state1"></end-state>
</process-definition>